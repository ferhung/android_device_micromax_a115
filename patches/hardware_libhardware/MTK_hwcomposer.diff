From e51d0a17a6bc973aae6b3bc930519d300b9457c1 Mon Sep 17 00:00:00 2001
From: Dr-Shadow <xxdrshadowxx@gmail.com>
Date: Fri, 13 Jun 2014 16:22:36 +0200
Subject: [PATCH] [2/2] [DO NOT MERGE/TEST/WIP] MTK hwcomposer

Change-Id: Iba38e9a705271ead6dcee02332610ea7eecf0f13
---

diff --git a/include/hardware/hwcomposer.h b/include/hardware/hwcomposer.h
index 1ebd97e..defcf29 100644
--- a/include/hardware/hwcomposer.h
+++ b/include/hardware/hwcomposer.h
@@ -266,10 +266,12 @@
              *   pixel.a = planeAlpha;
              *
              */
+#ifndef MTK_MT6577
             uint8_t planeAlpha;
 
             /* reserved for future use */
             uint8_t _pad[3];
+#endif
         };
     };
 
@@ -279,7 +281,7 @@
 #ifndef MTK_MT6577
     int32_t reserved[24 - 19];
 #else
-    int32_t reserved[24 - 19];
+    int32_t reserved[24 - 18];
 
     typedef struct hwc_layer_ext {
         /* string for distinguish handler */
diff --git a/include/hardware/hwcomposer_defs.h b/include/hardware/hwcomposer_defs.h
index 35c7820..538c134 100644
--- a/include/hardware/hwcomposer_defs.h
+++ b/include/hardware/hwcomposer_defs.h
@@ -206,6 +206,44 @@
     HWC_DISPLAY_VIRTUAL_BIT     = 1 << HWC_DISPLAY_VIRTUAL,
 };
 
+#ifdef MTK_MT6577
+/*
+ * hwc_layer_1_t::flags values extension
+ * Need to check if these values are conflict to original AOSP
+ */
+enum {
+    /* HWC_SECURE_LAYER is set by SurfaceFlinger to indicat that the HAL
+     * this layer is protected
+     */
+    HWC_SECURE_LAYER   = 0x10000000,
+
+    /*
+     * HWC_DIRTY_LAYER is set by SurfaceFlinger to indicate that the HAL
+     * this layer has updated content.
+     */
+    HWC_DIRTY_LAYER    = 0x20000000,
+
+    /*
+     * HWC_DIM_LAYER is set by SurfaceFlinger to indicate that the HAL
+     * this layer is used as dim layer if HWC can handle dim effect
+     */
+    HWC_DIM_LAYER      = 0x40000000,
+};
+
+/*
+ * hwc_display_contents_1_t::flags values extension
+ * Need to check if these values are conflict to original AOSP
+ */
+enum {
+    HWC_SWAP_REQUIRED         = 0x20000000,
+    HWC_LAYERSCREENSHOT_EXIST = 0x40000000,
+    HWC_SCREEN_FROZEN         = 0x80000000,
+
+    // HWC_ORIENTATION_MASK is using third byte for external orientation
+    // Added for HWC_DEVICE_API_VERSION_1_0
+    HWC_ORIENTATION_MASK      = 0x00FF0000,
+};
+#endif
 /*****************************************************************************/
 
 __END_DECLS
